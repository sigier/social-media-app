[{"E:\\social-media-app\\client-app\\src\\index.tsx":"1","E:\\social-media-app\\client-app\\src\\reportWebVitals.ts":"2","E:\\social-media-app\\client-app\\src\\app\\stores\\store.ts":"3","E:\\social-media-app\\client-app\\src\\app\\layout\\App.tsx":"4","E:\\social-media-app\\client-app\\src\\app\\stores\\activityStore.ts":"5","E:\\social-media-app\\client-app\\src\\app\\stores\\commonStore.ts":"6","E:\\social-media-app\\client-app\\src\\app\\stores\\userStore.ts":"7","E:\\social-media-app\\client-app\\src\\app\\stores\\modalStore.ts":"8","E:\\social-media-app\\client-app\\src\\app\\layout\\NavBar.tsx":"9","E:\\social-media-app\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","E:\\social-media-app\\client-app\\src\\features\\home\\HomePage.tsx":"11","E:\\social-media-app\\client-app\\src\\features\\errors\\NotFound.tsx":"12","E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"13","E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"14","E:\\social-media-app\\client-app\\src\\features\\errors\\ServerError.tsx":"15","E:\\social-media-app\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"16","E:\\social-media-app\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx":"17","E:\\social-media-app\\client-app\\src\\app\\models\\activity.ts":"18","E:\\social-media-app\\client-app\\src\\app\\models\\profile.ts":"19","E:\\social-media-app\\client-app\\src\\app\\api\\agent.ts":"20","E:\\social-media-app\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"21","E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"22","E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"23","E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"24","E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"25","E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"26","E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"27","E:\\social-media-app\\client-app\\src\\features\\users\\RegisterForm.tsx":"28","E:\\social-media-app\\client-app\\src\\features\\users\\LoginForm.tsx":"29","E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseSelectInput.tsx":"30","E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseTextArea.tsx":"31","E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseTextInput.tsx":"32","E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseDateInput.tsx":"33","E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"34","E:\\social-media-app\\client-app\\src\\features\\errors\\ValidationErrors.tsx":"35","E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendee.tsx":"36","E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileCard.tsx":"37","E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfilePage.tsx":"38","E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileHeader.tsx":"39","E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileContent.tsx":"40","E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx":"41","E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoUploadWidget.tsx":"42","E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx":"43","E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx":"44","E:\\social-media-app\\client-app\\src\\app\\stores\\profileStore.ts":"45"},{"size":997,"mtime":1625400146315,"results":"46","hashOfConfig":"47"},{"size":440,"mtime":1625400146316,"results":"48","hashOfConfig":"47"},{"size":794,"mtime":1625407827453,"results":"49","hashOfConfig":"47"},{"size":2308,"mtime":1625403937157,"results":"50","hashOfConfig":"47"},{"size":6875,"mtime":1625400146310,"results":"51","hashOfConfig":"47"},{"size":942,"mtime":1625400146310,"results":"52","hashOfConfig":"47"},{"size":1859,"mtime":1625407900813,"results":"53","hashOfConfig":"47"},{"size":517,"mtime":1625400146310,"results":"54","hashOfConfig":"47"},{"size":1912,"mtime":1625408186697,"results":"55","hashOfConfig":"47"},{"size":388,"mtime":1625400146308,"results":"56","hashOfConfig":"47"},{"size":1905,"mtime":1625400146314,"results":"57","hashOfConfig":"47"},{"size":581,"mtime":1625400146314,"results":"58","hashOfConfig":"47"},{"size":1436,"mtime":1625400146313,"results":"59","hashOfConfig":"47"},{"size":1101,"mtime":1625400146311,"results":"60","hashOfConfig":"47"},{"size":848,"mtime":1625400146314,"results":"61","hashOfConfig":"47"},{"size":5203,"mtime":1625400146314,"results":"62","hashOfConfig":"47"},{"size":536,"mtime":1625400146307,"results":"63","hashOfConfig":"47"},{"size":1182,"mtime":1625400146309,"results":"64","hashOfConfig":"47"},{"size":478,"mtime":1625407754538,"results":"65","hashOfConfig":"47"},{"size":3823,"mtime":1625412063753,"results":"66","hashOfConfig":"47"},{"size":269,"mtime":1625400146308,"results":"67","hashOfConfig":"47"},{"size":3902,"mtime":1625407957229,"results":"68","hashOfConfig":"47"},{"size":2420,"mtime":1625400146312,"results":"69","hashOfConfig":"47"},{"size":1732,"mtime":1625400146313,"results":"70","hashOfConfig":"47"},{"size":2128,"mtime":1625407975293,"results":"71","hashOfConfig":"47"},{"size":693,"mtime":1625400146311,"results":"72","hashOfConfig":"47"},{"size":1013,"mtime":1625400146312,"results":"73","hashOfConfig":"47"},{"size":2522,"mtime":1625400146315,"results":"74","hashOfConfig":"47"},{"size":1855,"mtime":1625400146315,"results":"75","hashOfConfig":"47"},{"size":1060,"mtime":1625400146307,"results":"76","hashOfConfig":"47"},{"size":765,"mtime":1625400146307,"results":"77","hashOfConfig":"47"},{"size":764,"mtime":1625400146307,"results":"78","hashOfConfig":"47"},{"size":891,"mtime":1625400146307,"results":"79","hashOfConfig":"47"},{"size":3206,"mtime":1625407932116,"results":"80","hashOfConfig":"47"},{"size":697,"mtime":1625400146314,"results":"81","hashOfConfig":"47"},{"size":1299,"mtime":1625400146312,"results":"82","hashOfConfig":"47"},{"size":940,"mtime":1625407992652,"results":"83","hashOfConfig":"47"},{"size":1136,"mtime":1625403630513,"results":"84","hashOfConfig":"47"},{"size":1954,"mtime":1625403576680,"results":"85","hashOfConfig":"47"},{"size":938,"mtime":1625403608734,"results":"86","hashOfConfig":"47"},{"size":3941,"mtime":1625407672545,"results":"87","hashOfConfig":"47"},{"size":2081,"mtime":1625407581225,"results":"88","hashOfConfig":"47"},{"size":1123,"mtime":1625407654626,"results":"89","hashOfConfig":"47"},{"size":700,"mtime":1625407617951,"results":"90","hashOfConfig":"47"},{"size":3078,"mtime":1625411429089,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1fcvwde",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\social-media-app\\client-app\\src\\index.tsx",[],["187","188"],"E:\\social-media-app\\client-app\\src\\reportWebVitals.ts",[],"E:\\social-media-app\\client-app\\src\\app\\stores\\store.ts",[],"E:\\social-media-app\\client-app\\src\\app\\layout\\App.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\stores\\activityStore.ts",["189"],"import format from \"date-fns/format\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store, useStore } from \"./store\";\r\n\r\n\r\nexport default class ActivityStore {\r\n    \r\n    activityRegister = new Map<string, Activity>();\r\n\r\n    chosenActivity: Activity | undefined = undefined;\r\n\r\n    editMode = false;\r\n\r\n    loading = false;\r\n\r\n    loadingInitial = false;\r\n\r\n    \r\n    constructor() {\r\n        \r\n        makeAutoObservable(this);\r\n    }\r\n\r\n\r\n    get activitiesByDate(){\r\n\r\n        return Array.from(this.activityRegister.values()).sort((a,b) => \r\n\r\n            (a.date!.getTime()) - (b.date!.getTime())\r\n        );\r\n    }\r\n\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(\r\n\r\n            this.activitiesByDate.reduce((activities, activity) => {\r\n                const date = format(activity.date!,'dd MMM yyyy');\r\n                activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n                return activities;\r\n            }, {} as {[key: string]: Activity[]})\r\n        )\r\n    }\r\n\r\n\r\n    loadActivity = async (id: string) => {\r\n\r\n        let activity = this.getActivity(id);\r\n\r\n        if (activity) {\r\n\r\n            this.chosenActivity = activity;\r\n\r\n            return activity;\r\n\r\n        } else {\r\n\r\n            this.loadingInitial = true;\r\n\r\n            try {\r\n\r\n                activity = await agent.activities.activityDetails(id);\r\n\r\n                this.setActivity(activity);\r\n\r\n                runInAction(() => {\r\n\r\n                    this.chosenActivity = activity;\r\n                });\r\n\r\n                this.setLoadingInitial(false);\r\n\r\n                return activity;\r\n                \r\n            } catch (error) {\r\n\r\n                console.log(error);\r\n\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private getActivity(id: string) {\r\n\r\n        return this.activityRegister.get(id);\r\n    }\r\n\r\n\r\n    private setActivity(activity: Activity) {\r\n\r\n        const user = store.userStore.user;\r\n\r\n        if (user) {\r\n            \r\n            activity.isGoing = activity.attendees!.some(\r\n                a => a.username === user.username\r\n            );\r\n\r\n            activity.isHost = activity.hostUsername === user.username;\r\n\r\n            activity.host = activity.attendees?.find (\r\n\r\n                x => x.username === activity.hostUsername\r\n            );\r\n        }\r\n\r\n\r\n        activity.date = new Date(activity.date!);\r\n        \r\n        this.activityRegister.set(activity.id, activity);\r\n    }   \r\n\r\n\r\n    loadActivities = async () => {\r\n\r\n         this.loadingInitial = true;\r\n\r\n         try {\r\n\r\n            const activities = await agent.activities.list();\r\n\r\n            runInAction(() => {\r\n                \r\n                activities.forEach(activity => {\r\n\r\n                    this.setActivity(activity);\r\n                });\r\n\r\n                this.loadingInitial = false;\r\n            });\r\n        }\r\n        catch(error) {\r\n\r\n            console.log(error);\r\n\r\n            runInAction(() => { this.loadingInitial = false; });\r\n        }\r\n    };\r\n\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n\r\n        const user = store.userStore.user;\r\n\r\n        const attendee = new Profile(user!);\r\n\r\n        try {\r\n\r\n            await agent.activities.create(activity);\r\n\r\n            const newActivity = new Activity(activity);\r\n\r\n            newActivity.hostUsername = user!.username;\r\n\r\n            newActivity.attendees = [attendee];\r\n\r\n            this.setActivity(newActivity);\r\n\r\n            runInAction(() => {\r\n\r\n                this.chosenActivity = newActivity;\r\n\r\n            });\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n\r\n        try {\r\n\r\n            await agent.activities.update(activity);\r\n\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n\r\n                    let updatedActivity = {...this.getActivity(activity.id),...activity};\r\n\r\n                    this.activityRegister.set(activity.id, updatedActivity as Activity);\r\n\r\n                    this.chosenActivity = updatedActivity as Activity;\r\n                }\r\n            });\r\n \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n        }\r\n    };\r\n\r\n\r\n    deleteActivity = async(id: string) => {\r\n\r\n        \r\n        this.loading = true;\r\n\r\n        try {\r\n\r\n            await agent.activities.delete(id);\r\n\r\n            runInAction(() => {\r\n\r\n                this.activityRegister.delete(id);\r\n\r\n                this.loading = false;\r\n            });\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n            runInAction(() => {\r\n                \r\n                this.loading = false;\r\n            });\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    updateAttendance = async() => {\r\n\r\n        const user = store.userStore.user;\r\n\r\n        this.loading = true;\r\n\r\n        try {\r\n\r\n            await agent.activities.attend(this.chosenActivity?.id!)\r\n\r\n            runInAction(() => {\r\n                \r\n                if (this.chosenActivity?.isGoing) {\r\n\r\n                    this.chosenActivity.attendees = \r\n                        this.chosenActivity.attendees?.filter(\r\n                            a => a.username !== user?.username\r\n                        );\r\n                    \r\n                    this.chosenActivity.isGoing = false;\r\n\r\n                } else {\r\n\r\n                    const attendee = new Profile(user!);\r\n\r\n                    this.chosenActivity?.attendees?.push(attendee);\r\n\r\n                    this.chosenActivity!.isGoing = true;\r\n                }\r\n\r\n                this.activityRegister.set(this.chosenActivity!.id, this.chosenActivity!);\r\n            });\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            \r\n        } finally {\r\n\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    };\r\n\r\n\r\n    cancelActivityToggle = async () => {\r\n\r\n        this.loading = true;\r\n\r\n        try {\r\n\r\n            await agent.activities.attend(this.chosenActivity!.id);\r\n\r\n            runInAction(() => {\r\n\r\n                this.chosenActivity!.isCancelled = !this.chosenActivity!.isCancelled;\r\n\r\n                this.activityRegister.set(this.chosenActivity!.id, this.chosenActivity!);\r\n            });\r\n            \r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n        \r\n        } finally {\r\n\r\n            runInAction(() => this.loading = false);\r\n        }\r\n\r\n    };\r\n};","E:\\social-media-app\\client-app\\src\\app\\stores\\commonStore.ts",[],"E:\\social-media-app\\client-app\\src\\app\\stores\\userStore.ts",[],"E:\\social-media-app\\client-app\\src\\app\\stores\\modalStore.ts",[],"E:\\social-media-app\\client-app\\src\\app\\layout\\NavBar.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\home\\HomePage.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\errors\\NotFound.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\errors\\ServerError.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["190","191","192"],"import { observer } from 'mobx-react-lite';\r\nimport { useEffect } from 'react';\r\nimport {  useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ReuseTextInput from '../../../app/common/form/ReuseTextInput';\r\nimport ReuseTextArea from '../../../app/common/form/ReuseTextArea';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport ReuseSelectInput from '../../../app/common/form/ReuseSelectInput';\r\nimport ReuseDateInput from '../../../app/common/form/ReuseDateInput';\r\nimport { Activity, ActivityFormValues } from '../../../app/models/activity';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\n\r\n\r\nfunction ActivityForm() {\r\n\r\n    const { activityStore } = useStore();\r\n\r\n    const history = useHistory();\r\n\r\n    const { createActivity, \r\n        updateActivity, \r\n        loading,\r\n        loadActivity,\r\n        loadingInitial\r\n      } = activityStore;\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('Activity title is mandatory'),\r\n        description: Yup.string().required('Activity description is mandatory'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        city: Yup.string().required(),\r\n        venue: Yup.string().required()\r\n    })\r\n\r\n\r\n    const [activity, setActivity] = \r\n            useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (id) {\r\n\r\n            loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)));\r\n        }\r\n\r\n    }, [id, loadActivity]);\r\n\r\n\r\n    function handleFormSubmit(activity: ActivityFormValues) {\r\n        if (!activity.id) {\r\n            let newActivity = {\r\n                ...activity,\r\n                id: uuid()\r\n            };\r\n            createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\r\n        } else {\r\n            updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\r\n        }\r\n    }\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\r\n\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity details' sub color='teal' />\r\n            <Formik\r\n             validationSchema={validationSchema} \r\n             enableReinitialize \r\n             initialValues={activity} \r\n             onSubmit={values => handleFormSubmit(values)}>\r\n                {\r\n                    ({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n\r\n                        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                            <ReuseTextInput\r\n                             name='title'\r\n                             placeholder='Title' \r\n                            />\r\n                            <ReuseTextArea rows={4}\r\n                                placeholder='Description'\r\n                                name='description'\r\n                            />\r\n                            <ReuseSelectInput options={categoryOptions}\r\n                                placeholder='Category'\r\n                                name='category'\r\n                            />\r\n                            <ReuseDateInput\r\n                                placeholderText='Date'\r\n                                name='date'\r\n                                showTimeSelect\r\n                                timeCaption='time'\r\n                                dateFormat='MMMM d, yyyy h:mm a'\r\n                            />\r\n                            <Header content='Location details' sub color='teal' />\r\n                            <ReuseTextInput\r\n                                placeholder='City'\r\n                                name='city'\r\n                            />\r\n                            <ReuseTextInput\r\n                                placeholder='Venue'\r\n                                name='venue'\r\n                            />\r\n                            <Button\r\n                                floated='right'\r\n                                positive\r\n                                type='submit'\r\n                                content='Sumbit'\r\n                                loading={isSubmitting}\r\n                            />\r\n                            <Button\r\n                                disabled={isSubmitting || !isValid || !dirty }\r\n                                floated='right'\r\n                                type='button'\r\n                                content='Cancel'\r\n                                as={Link} to='/activities'\r\n                            />\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </Segment>\r\n    )\r\n};\r\n\r\n\r\nexport default observer(ActivityForm);","E:\\social-media-app\\client-app\\src\\app\\common\\modals\\ModalContainer.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\models\\activity.ts",["193"],"import { isConstructorDeclaration } from \"typescript\";\r\nimport { Profile } from \"./profile\";\r\n\r\nexport interface Activity { \r\n id: string;\r\n title: string;\r\n date: Date | null;\r\n description: string;\r\n category: string;\r\n city: string;\r\n venue: string;\r\n hostUsername: string;\r\n isCancelled: boolean;\r\n isGoing: boolean;\r\n isHost: boolean;\r\n host?: Profile;\r\n attendees: Profile[];\r\n};\r\n\r\nexport class Activity implements Activity {\r\n\r\n    constructor(init?: ActivityFormValues) {\r\n\r\n        Object.assign(this, init);\r\n    }\r\n\r\n};\r\n\r\n\r\nexport class ActivityFormValues {\r\n\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n\r\n    constructor(activity?: ActivityFormValues) \r\n    {\r\n        if (activity) {\r\n\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n\r\n\r\n        }\r\n\r\n    }\r\n}","E:\\social-media-app\\client-app\\src\\app\\models\\profile.ts",[],"E:\\social-media-app\\client-app\\src\\app\\api\\agent.ts",[],"E:\\social-media-app\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\users\\RegisterForm.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\users\\LoginForm.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseSelectInput.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseTextArea.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseTextInput.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\form\\ReuseDateInput.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["194"],"import format from \"date-fns/format\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\n\r\ninterface Props {\r\n    activity: Activity;\r\n}\r\n\r\n\r\nexport default function ActivityListItem({ activity } : Props) {\r\n\r\n  \r\n    return (\r\n        \r\n        <Segment.Group>\r\n            <Segment>\r\n                {\r\n                    activity.isCancelled && \r\n                    <Label \r\n                     attached='top'\r\n                     color='red'\r\n                     content='Cancelled'\r\n                     style={{textAlign: 'center'}}\r\n                    />\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image\r\n                         style={{marginBottom: 3}}\r\n                         size='tiny' \r\n                         circular\r\n                         src='/assets/user.png'\r\n                        />\r\n                        <Item.Content>\r\n                            <Item.Header \r\n                             as={ Link }\r\n                             to={`/activities/${activity.id}`}\r\n                            >\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                Hosted by {activity.host?.displayName}\r\n                            </Item.Description>\r\n                            {activity.isHost && (\r\n                                <Item.Description>\r\n                                    <Label basic color='orange'>\r\n                                        You are hosting this activity\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                            {activity.isGoing && !activity.isHost && (\r\n                                <Item.Description>\r\n                                <Label basic color='green'>\r\n                                        You are going to this event\r\n                                    </Label>\r\n                                </Item.Description>\r\n                            )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock'/> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker'/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!} />\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{ activity.description }</span>\r\n                <Button \r\n                 as={ Link }\r\n                 to={`/activities/${activity.id}`}\r\n                 color='teal'\r\n                 floated='right'\r\n                 content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n};","E:\\social-media-app\\client-app\\src\\features\\errors\\ValidationErrors.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\activities\\dashboard\\ActivityListItemAttendee.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileCard.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfilePage.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileHeader.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfileContent.tsx",[],"E:\\social-media-app\\client-app\\src\\features\\profiles\\ProfilePhotos.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoUploadWidget.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetDropzone.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\common\\imageUpload\\PhotoWidgetCropper.tsx",[],"E:\\social-media-app\\client-app\\src\\app\\stores\\profileStore.ts",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":7,"column":17,"nodeType":"201","messageId":"202","endLine":7,"endColumn":25},{"ruleId":"199","severity":1,"message":"203","line":15,"column":10,"nodeType":"201","messageId":"202","endLine":15,"endColumn":18},{"ruleId":"199","severity":1,"message":"204","line":17,"column":10,"nodeType":"201","messageId":"202","endLine":17,"endColumn":13},{"ruleId":"199","severity":1,"message":"205","line":29,"column":9,"nodeType":"201","messageId":"202","endLine":29,"endColumn":16},{"ruleId":"199","severity":1,"message":"206","line":1,"column":10,"nodeType":"201","messageId":"202","endLine":1,"endColumn":34},{"ruleId":"199","severity":1,"message":"207","line":2,"column":16,"nodeType":"201","messageId":"202","endLine":2,"endColumn":24},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'useStore' is defined but never used.","Identifier","unusedVar","'Activity' is defined but never used.","'act' is defined but never used.","'loading' is assigned a value but never used.","'isConstructorDeclaration' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]